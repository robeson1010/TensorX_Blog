{
  
    
        "post0": {
            "title": "SSL code explain",
            "content": "Flow chat . Image aug . 2 Golbal view aug and 6 local view. Result a list of 8 imgs . def open_tif(fn, cls=torch.Tensor): im = skio.imread(str(fn))/10000 im = im.transpose(1,2,0).astype(&#39;float32&#39;) return im . . img=open_tif(&#39;./tifs/S2B_MSIL2A_20170924T093019_45_63.tif&#39;) plt.imshow(img[:,:,3]) . &lt;matplotlib.image.AxesImage at 0x7f35996dde80&gt; . BAND_STATS = { &#39;S2&#39;:{ &#39;mean&#39;: { &#39;B01&#39;: 340.76769064, &#39;B02&#39;: 429.9430203, &#39;B03&#39;: 614.21682446, &#39;B04&#39;: 590.23569706, &#39;B05&#39;: 950.68368468, &#39;B06&#39;: 1792.46290469, &#39;B07&#39;: 2075.46795189, &#39;B08&#39;: 2218.94553375, &#39;B8A&#39;: 2266.46036911, &#39;B09&#39;: 2246.0605464, &#39;B11&#39;: 1594.42694882, &#39;B12&#39;: 1009.32729131 }, &#39;std&#39;: { &#39;B01&#39;: 554.81258967, &#39;B02&#39;: 572.41639287, &#39;B03&#39;: 582.87945694, &#39;B04&#39;: 675.88746967, &#39;B05&#39;: 729.89827633, &#39;B06&#39;: 1096.01480586, &#39;B07&#39;: 1273.45393088, &#39;B08&#39;: 1365.45589904, &#39;B8A&#39;: 1356.13789355, &#39;B09&#39;: 1302.3292881, &#39;B11&#39;: 1079.19066363, &#39;B12&#39;: 818.86747235 } }, &#39;S1&#39;: { &#39;mean&#39;: { &#39;VV&#39;: -12.619993741972035, &#39;VH&#39;: -19.29044597721542, &#39;VV/VH&#39;: 0.6525036195871579, }, &#39;std&#39;: { &#39;VV&#39;: 5.115911777546365, &#39;VH&#39;: 5.464428464912864, &#39;VV/VH&#39;: 30.75264076801808, }, &#39;min&#39;: { &#39;VV&#39;: -74.33214569091797, &#39;VH&#39;: -75.11137390136719, &#39;R&#39;: 3.21E-2 }, &#39;max&#39;: { &#39;VV&#39;: 34.60696029663086, &#39;VH&#39;: 33.59768295288086, &#39;R&#39;: 1.08 } } } bands=[&#39;B02&#39;,&#39;B03&#39;, &#39;B04&#39;, &#39;B05&#39;,&#39;B06&#39;, &#39;B07&#39;, &#39;B11&#39;, &#39;B08&#39;,&#39;B8A&#39;, &#39;B12&#39;] means=[BAND_STATS[&#39;S2&#39;][&#39;mean&#39;][band]/10000 for band in bands] stds=[BAND_STATS[&#39;S2&#39;][&#39;std&#39;][band]/10000 for band in bands] . . import albumentations as A from albumentations.pytorch import ToTensorV2 from torchvision import transforms trainaug=[] # first gobal crop globalaug1 = A.Compose([A.HorizontalFlip(p=0.5), A.ShiftScaleRotate(p=.5), A.RandomResizedCrop(120,120,scale=(0.4, 1.)), A.GaussianBlur(p=1.0), # A.Solarize(threshold=0.5), A.Normalize(mean=means,std=stds,max_pixel_value=1.0), ToTensorV2()] ) # second global crop globalaug2 = A.Compose([A.HorizontalFlip(p=0.5), A.ShiftScaleRotate(p=.5), A.RandomResizedCrop(120,120,scale=(0.4, 1.)), A.GaussianBlur(p=0.1), A.Solarize(threshold=0.5,p=0.2), A.Normalize(mean=means,std=stds,max_pixel_value=1.0), ToTensorV2()] ) # transformation for the local small crops locaaug = A.Compose([A.HorizontalFlip(p=0.5), A.ShiftScaleRotate(p=.5), A.RandomResizedCrop(56,56,scale=(0.05, 0.4)), A.GaussianBlur(p=0.5), A.Normalize(mean=means,std=stds,max_pixel_value=1.0), ToTensorV2()] ) trainaug.append(globalaug1) trainaug.append(globalaug2) for _ in range(6): trainaug.append(locaaug) . . result=[] for i in range(len(trainaug)): result.append(trainaug[i](image=img)[&#39;image&#39;]) . fig, axs = plt.subplots(2,4,dpi=150) for i in range(8): axs[i//4,i%4].imshow(result[i][3]) . . MultiCropWrapper . Perform forward pass separately on each resolution input.The inputs corresponding to a single resolution are clubbed and single forward is run on the same resolution inputs. Hence we do several forward passes = number of different resolutions used. We then concatenate all the output features and run the head forward on these concatenated features. . class MultiCropWrapper(nn.Module): def __init__(self, backbone, head): super(MultiCropWrapper, self).__init__() # disable layers dedicated to ImageNet labels classification backbone.fc, backbone.head = nn.Identity(), nn.Identity() self.backbone = backbone self.head = head def forward(self, x): # convert to list if not isinstance(x, list): x = [x] idx_crops = torch.cumsum(torch.unique_consecutive( torch.tensor([inp.shape[-1] for inp in x]), return_counts=True, )[1], 0) start_idx, output = 0, torch.empty(0).to(x[0].device) for end_idx in idx_crops: _out = self.backbone(torch.cat(x[start_idx: end_idx])) # The output is a tuple with XCiT model. See: # https://github.com/facebookresearch/xcit/blob/master/xcit.py#L404-L405 if isinstance(_out, tuple): _out = _out[0] # accumulate outputs output = torch.cat((output, _out)) start_idx = end_idx # Run the head forward on the concatenated features. return self.head(output) . teacher_output = teacher(images[:2]) student_output = student(images) loss = dino_loss(student_output, teacher_output, epoch) # EMA update for the teacher with torch.no_grad(): m = momentum_schedule[it] # momentum parameter for param_q, param_k in zip(student.module.parameters(), teacher_without_ddp.parameters()): param_k.data.mul_(m).add_((1 - m) * param_q.detach().data) . Two golbal views are fed to teacher and all the others are fed to student . Loss . class DINOLoss(nn.Module): def __init__(self, out_dim, ncrops, warmup_teacher_temp, teacher_temp, warmup_teacher_temp_epochs, nepochs, student_temp=0.1, center_momentum=0.9): super().__init__() self.student_temp = student_temp self.center_momentum = center_momentum self.ncrops = ncrops self.register_buffer(&quot;center&quot;, torch.zeros(1, out_dim)) # we apply a warm up for the teacher temperature because # a too high temperature makes the training instable at the beginning self.teacher_temp_schedule = np.concatenate(( np.linspace(warmup_teacher_temp, teacher_temp, warmup_teacher_temp_epochs), np.ones(nepochs - warmup_teacher_temp_epochs) * teacher_temp )) def forward(self, student_output, teacher_output, epoch): &quot;&quot;&quot; Cross-entropy between softmax outputs of the teacher and student networks. &quot;&quot;&quot; student_out = student_output / self.student_temp student_out = student_out.chunk(self.ncrops) # teacher centering and sharpening temp = self.teacher_temp_schedule[epoch] teacher_out = F.softmax((teacher_output - self.center) / temp, dim=-1) teacher_out = teacher_out.detach().chunk(2) total_loss = 0 n_loss_terms = 0 for iq, q in enumerate(teacher_out): for v in range(len(student_out)): if v == iq: # we skip cases where student and teacher operate on the same view continue loss = torch.sum(-q * F.log_softmax(student_out[v], dim=-1), dim=-1) total_loss += loss.mean() n_loss_terms += 1 total_loss /= n_loss_terms self.update_center(teacher_output) return total_loss @torch.no_grad() def update_center(self, teacher_output): &quot;&quot;&quot; Update center used for teacher output. &quot;&quot;&quot; batch_center = torch.sum(teacher_output, dim=0, keepdim=True) dist.all_reduce(batch_center) batch_center = batch_center / (len(teacher_output) * dist.get_world_size()) # ema update self.center = self.center * self.center_momentum + batch_center * (1 - self.center_momentum) .",
            "url": "https://robeson1010.github.io/TensorX_Blog/jupyter/remote%20sensing/ssl/deep%20learning/2021/12/11/SSL.html",
            "relUrl": "/jupyter/remote%20sensing/ssl/deep%20learning/2021/12/11/SSL.html",
            "date": " • Dec 11, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Stac_vrt for S3",
            "content": "from pystac_client import Client . lon, lat = -105.78, 35.79 . URL = &quot;https://earth-search.aws.element84.com/v0&quot; catalog = Client.open(URL) . area={&quot;type&quot;:&quot;Polygon&quot;,&quot;coordinates&quot;:[[[111.137695,20.179724],[108.566895,20.179724],[108.566895,18.145852],[111.137695,18.145852],[111.137695,20.179724]]]} . %%time items = catalog.search( intersects=area, collections=[&quot;sentinel-s2-l2a-cogs&quot;], datetime=&quot;2020-04-01/2020-05-31&quot; ).get_all_items() len(items) . CPU times: user 124 ms, sys: 8 ms, total: 132 ms Wall time: 4.49 s . 313 . import stackstac %time stack = stackstac.stack(items,epsg=3857) . CPU times: user 328 ms, sys: 0 ns, total: 328 ms Wall time: 325 ms . stack . . . . . . . . &lt;xarray.DataArray &amp;#x27;stackstac-88843e937e32b877395d6023cc97606a&amp;#x27; (time: 313, band: 17, y: 31489, x: 44444)&gt; dask.array&lt;fetch_raster_window, shape=(313, 17, 31489, 44444), dtype=float64, chunksize=(1, 1, 1024, 1024), chunktype=numpy.ndarray&gt; Coordinates: * time (time) datetime64[ns] 2020-04-02T03:22:14 ...... id (time) &lt;U24 &amp;#x27;S2A_49QEC_20200402_0_L2A&amp;#x27; ... &amp;#x27;S... * band (band) &lt;U8 &amp;#x27;overview&amp;#x27; &amp;#x27;visual&amp;#x27; ... &amp;#x27;WVP&amp;#x27; &amp;#x27;SCL&amp;#x27; * x (x) float64 1.2e+07 1.2e+07 ... 1.247e+07 * y (y) float64 2.368e+06 2.368e+06 ... 2.033e+06 created (time) &lt;U24 &amp;#x27;2020-08-19T09:47:27.999Z&amp;#x27; ... &amp;#x27;2... sentinel:sequence (time) &lt;U1 &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; ... &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; sentinel:data_coverage (time) object 51.59 100 100 ... 39.51 69.79 sentinel:valid_cloud_cover bool True constellation &lt;U10 &amp;#x27;sentinel-2&amp;#x27; gsd int64 10 updated (time) &lt;U24 &amp;#x27;2020-08-19T09:47:27.999Z&amp;#x27; ... &amp;#x27;2... sentinel:grid_square (time) &lt;U2 &amp;#x27;EC&amp;#x27; &amp;#x27;DC&amp;#x27; &amp;#x27;CC&amp;#x27; ... &amp;#x27;ZG&amp;#x27; &amp;#x27;BA&amp;#x27; &amp;#x27;ZF&amp;#x27; instruments &lt;U3 &amp;#x27;msi&amp;#x27; platform (time) &lt;U11 &amp;#x27;sentinel-2a&amp;#x27; ... &amp;#x27;sentinel-2b&amp;#x27; proj:epsg (time) int64 32649 32649 32649 ... 32649 32648 sentinel:latitude_band &lt;U1 &amp;#x27;Q&amp;#x27; eo:cloud_cover (time) float64 60.11 85.52 66.16 ... 3.81 18.55 sentinel:product_id (time) &lt;U60 &amp;#x27;S2A_MSIL2A_20200402T030541_N0214... sentinel:utm_zone (time) int64 49 49 49 49 48 ... 48 49 48 49 48 view:off_nadir int64 0 data_coverage (time) object None None None ... None 69.79 title (band) &lt;U31 &amp;#x27;True color image&amp;#x27; ... &amp;#x27;Scene Cla... epsg int64 3857 Attributes: spec: RasterSpec(epsg=3857, bounds=(12003838.074850246, 2033038... crs: epsg:3857 transform: | 10.58, 0.00, 12003838.07| n| 0.00,-10.64, 2368079.78| n... resolution_xy: (10.57621788047254, 10.639946902170777) . xarray.DataArray&#39;stackstac-88843e937e32b877395d6023cc97606a&#39;time: 313 | band: 17 | y: 31489 | x: 44444 | . dask.array&lt;chunksize=(1, 1, 1024, 1024), meta=np.ndarray&gt; | Array Chunk . Bytes 54.18 TiB | 8.00 MiB | . Shape (313, 17, 31489, 44444) | (1, 1, 1024, 1024) | . Count 7269850 Tasks | 7257844 Chunks | . Type float64 | numpy.ndarray | . | 313 1 44444 31489 17 | . | Coordinates: (24)time(time)datetime64[ns]2020-04-02T03:22:14 ... 2020-05-...array([&amp;#x27;2020-04-02T03:22:14.000000000&amp;#x27;, &amp;#x27;2020-04-02T03:22:18.000000000&amp;#x27;, &amp;#x27;2020-04-02T03:22:21.000000000&amp;#x27;, ..., &amp;#x27;2020-05-30T03:32:41.000000000&amp;#x27;, &amp;#x27;2020-05-30T03:32:54.000000000&amp;#x27;, &amp;#x27;2020-05-30T03:32:56.000000000&amp;#x27;], dtype=&amp;#x27;datetime64[ns]&amp;#x27;) . | id(time)&lt;U24&amp;#x27;S2A_49QEC_20200402_0_L2A&amp;#x27; ... &amp;#x27;...array([&amp;#x27;S2A_49QEC_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QDC_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QCC_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBC_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZH_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QEB_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QDB_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QCB_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBB_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QEA_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZG_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QDA_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QCA_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBA_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZF_20200402_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBC_20200405_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZH_20200405_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBB_20200405_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZG_20200405_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBA_20200405_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZF_20200405_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEC_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QDC_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QCC_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBC_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZH_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEB_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QDB_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QCB_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBB_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZG_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEA_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QDA_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QCA_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBA_20200407_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZF_20200407_0_L2A&amp;#x27;, &amp;#x27;S2A_49QEC_20200409_0_L2A&amp;#x27;, &amp;#x27;S2A_49QEB_20200409_0_L2A&amp;#x27;, &amp;#x27;S2A_49QDB_20200409_0_L2A&amp;#x27;, &amp;#x27;S2A_49QEA_20200409_0_L2A&amp;#x27;, ... &amp;#x27;S2A_49QBA_20200522_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZF_20200522_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEC_20200524_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEB_20200524_0_L2A&amp;#x27;, &amp;#x27;S2B_49QDB_20200524_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEA_20200524_0_L2A&amp;#x27;, &amp;#x27;S2B_49QDA_20200524_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBC_20200525_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZH_20200525_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBB_20200525_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZG_20200525_0_L2A&amp;#x27;, &amp;#x27;S2A_49QBA_20200525_0_L2A&amp;#x27;, &amp;#x27;S2A_48QZF_20200525_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEC_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QDC_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QCC_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBC_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZH_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEB_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QDB_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QCB_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBB_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZG_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QEA_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QDA_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QCA_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBA_20200527_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZF_20200527_0_L2A&amp;#x27;, &amp;#x27;S2A_49QEC_20200529_0_L2A&amp;#x27;, &amp;#x27;S2A_49QEB_20200529_0_L2A&amp;#x27;, &amp;#x27;S2A_49QDB_20200529_0_L2A&amp;#x27;, &amp;#x27;S2A_49QEA_20200529_0_L2A&amp;#x27;, &amp;#x27;S2A_49QDA_20200529_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBC_20200530_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZH_20200530_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBB_20200530_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZG_20200530_0_L2A&amp;#x27;, &amp;#x27;S2B_49QBA_20200530_0_L2A&amp;#x27;, &amp;#x27;S2B_48QZF_20200530_0_L2A&amp;#x27;], dtype=&amp;#x27;&lt;U24&amp;#x27;) . | band(band)&lt;U8&amp;#x27;overview&amp;#x27; &amp;#x27;visual&amp;#x27; ... &amp;#x27;WVP&amp;#x27; &amp;#x27;SCL&amp;#x27;array([&amp;#x27;overview&amp;#x27;, &amp;#x27;visual&amp;#x27;, &amp;#x27;B01&amp;#x27;, &amp;#x27;B02&amp;#x27;, &amp;#x27;B03&amp;#x27;, &amp;#x27;B04&amp;#x27;, &amp;#x27;B05&amp;#x27;, &amp;#x27;B06&amp;#x27;, &amp;#x27;B07&amp;#x27;, &amp;#x27;B08&amp;#x27;, &amp;#x27;B8A&amp;#x27;, &amp;#x27;B09&amp;#x27;, &amp;#x27;B11&amp;#x27;, &amp;#x27;B12&amp;#x27;, &amp;#x27;AOT&amp;#x27;, &amp;#x27;WVP&amp;#x27;, &amp;#x27;SCL&amp;#x27;], dtype=&amp;#x27;&lt;U8&amp;#x27;) . | x(x)float641.2e+07 1.2e+07 ... 1.247e+07array([12003838.07485 , 12003848.651068, 12003859.227286, ..., 12473855.773676, 12473866.349894, 12473876.926112]) . | y(y)float642.368e+06 2.368e+06 ... 2.033e+06array([2368079.782282, 2368069.142335, 2368058.502388, ..., 2033070.41412 , 2033059.774173, 2033049.134226]) . | created(time)&lt;U24&amp;#x27;2020-08-19T09:47:27.999Z&amp;#x27; ... &amp;#x27;...array([&amp;#x27;2020-08-19T09:47:27.999Z&amp;#x27;, &amp;#x27;2020-08-19T09:31:51.304Z&amp;#x27;, &amp;#x27;2020-08-19T09:41:57.251Z&amp;#x27;, &amp;#x27;2020-08-19T09:02:29.787Z&amp;#x27;, &amp;#x27;2020-09-19T01:38:29.766Z&amp;#x27;, &amp;#x27;2020-08-20T01:35:00.016Z&amp;#x27;, &amp;#x27;2020-08-19T09:33:44.027Z&amp;#x27;, &amp;#x27;2020-08-19T09:30:52.124Z&amp;#x27;, &amp;#x27;2020-08-19T09:10:43.967Z&amp;#x27;, &amp;#x27;2020-08-19T09:34:57.521Z&amp;#x27;, &amp;#x27;2020-08-31T15:25:11.333Z&amp;#x27;, &amp;#x27;2020-08-19T09:41:55.417Z&amp;#x27;, &amp;#x27;2020-08-19T09:21:58.718Z&amp;#x27;, &amp;#x27;2020-08-19T09:01:18.483Z&amp;#x27;, &amp;#x27;2020-09-24T05:34:20.580Z&amp;#x27;, &amp;#x27;2020-08-19T09:05:50.879Z&amp;#x27;, &amp;#x27;2020-09-18T22:06:47.234Z&amp;#x27;, &amp;#x27;2020-08-19T09:12:42.562Z&amp;#x27;, &amp;#x27;2020-09-19T00:07:01.285Z&amp;#x27;, &amp;#x27;2020-08-19T08:58:15.140Z&amp;#x27;, &amp;#x27;2020-08-31T18:35:41.929Z&amp;#x27;, &amp;#x27;2020-08-19T09:29:44.267Z&amp;#x27;, &amp;#x27;2020-08-19T09:43:50.988Z&amp;#x27;, &amp;#x27;2020-08-19T09:40:57.092Z&amp;#x27;, &amp;#x27;2020-08-19T09:10:11.469Z&amp;#x27;, &amp;#x27;2020-08-23T21:25:07.730Z&amp;#x27;, &amp;#x27;2020-08-19T09:46:19.628Z&amp;#x27;, &amp;#x27;2020-08-19T09:27:12.292Z&amp;#x27;, &amp;#x27;2020-08-19T09:11:59.445Z&amp;#x27;, &amp;#x27;2020-08-19T09:15:29.150Z&amp;#x27;, &amp;#x27;2020-09-05T10:46:55.516Z&amp;#x27;, &amp;#x27;2020-08-19T09:28:20.820Z&amp;#x27;, &amp;#x27;2020-08-19T09:34:55.100Z&amp;#x27;, &amp;#x27;2020-08-19T09:28:17.608Z&amp;#x27;, &amp;#x27;2020-08-19T09:01:06.359Z&amp;#x27;, &amp;#x27;2020-09-05T06:39:07.759Z&amp;#x27;, &amp;#x27;2020-08-19T09:34:28.743Z&amp;#x27;, &amp;#x27;2020-08-19T09:33:05.484Z&amp;#x27;, &amp;#x27;2020-08-19T09:24:02.988Z&amp;#x27;, &amp;#x27;2020-08-19T09:44:06.407Z&amp;#x27;, ... &amp;#x27;2020-08-19T09:01:51.754Z&amp;#x27;, &amp;#x27;2020-09-19T01:33:59.374Z&amp;#x27;, &amp;#x27;2020-08-20T01:41:07.436Z&amp;#x27;, &amp;#x27;2020-08-19T09:35:59.052Z&amp;#x27;, &amp;#x27;2020-08-19T09:23:47.956Z&amp;#x27;, &amp;#x27;2020-08-19T09:37:08.500Z&amp;#x27;, &amp;#x27;2020-08-19T09:27:33.458Z&amp;#x27;, &amp;#x27;2020-08-19T09:24:47.610Z&amp;#x27;, &amp;#x27;2020-08-23T19:50:43.899Z&amp;#x27;, &amp;#x27;2020-08-19T09:13:09.438Z&amp;#x27;, &amp;#x27;2020-09-07T15:25:51.847Z&amp;#x27;, &amp;#x27;2020-08-19T09:02:26.287Z&amp;#x27;, &amp;#x27;2020-09-07T17:17:01.727Z&amp;#x27;, &amp;#x27;2020-08-19T09:55:16.420Z&amp;#x27;, &amp;#x27;2020-08-19T09:33:57.954Z&amp;#x27;, &amp;#x27;2020-08-19T09:21:06.031Z&amp;#x27;, &amp;#x27;2020-08-19T08:58:38.839Z&amp;#x27;, &amp;#x27;2020-08-31T15:53:33.975Z&amp;#x27;, &amp;#x27;2020-08-19T09:31:25.787Z&amp;#x27;, &amp;#x27;2020-08-19T09:50:53.696Z&amp;#x27;, &amp;#x27;2020-08-19T09:22:07.107Z&amp;#x27;, &amp;#x27;2020-08-19T08:53:48.915Z&amp;#x27;, &amp;#x27;2020-09-18T21:56:08.134Z&amp;#x27;, &amp;#x27;2020-08-19T09:36:15.851Z&amp;#x27;, &amp;#x27;2020-08-19T09:32:11.610Z&amp;#x27;, &amp;#x27;2020-08-19T09:35:56.791Z&amp;#x27;, &amp;#x27;2020-08-19T09:01:39.597Z&amp;#x27;, &amp;#x27;2020-09-19T00:07:49.198Z&amp;#x27;, &amp;#x27;2020-08-19T09:49:47.437Z&amp;#x27;, &amp;#x27;2020-08-19T09:33:32.963Z&amp;#x27;, &amp;#x27;2020-08-19T09:32:07.498Z&amp;#x27;, &amp;#x27;2020-08-19T09:37:40.317Z&amp;#x27;, &amp;#x27;2020-08-19T09:15:28.254Z&amp;#x27;, &amp;#x27;2020-08-19T09:16:19.482Z&amp;#x27;, &amp;#x27;2020-09-05T10:23:48.090Z&amp;#x27;, &amp;#x27;2020-08-19T09:06:14.309Z&amp;#x27;, &amp;#x27;2020-09-18T23:49:24.938Z&amp;#x27;, &amp;#x27;2020-08-19T09:09:46.783Z&amp;#x27;, &amp;#x27;2020-09-20T06:02:40.483Z&amp;#x27;], dtype=&amp;#x27;&lt;U24&amp;#x27;) . | sentinel:sequence(time)&lt;U1&amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; ... &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27; &amp;#x27;0&amp;#x27;array([&amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;1&amp;#x27;, &amp;#x27;1&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;1&amp;#x27;, &amp;#x27;1&amp;#x27;, &amp;#x27;1&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;1&amp;#x27;, &amp;#x27;1&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;, &amp;#x27;0&amp;#x27;], dtype=&amp;#x27;&lt;U1&amp;#x27;) . | sentinel:data_coverage(time)object51.59 100 100 ... 89.17 39.51 69.79array([51.59, 100, 100, 49.3, 25.42, 30.36, 100, 100, 70.55, 9.15, 43.29, 97.17, 100, 91.59, 61.35, 85.43, 99.94, 62.74, 89.74, 40.07, 70.33, 52.03, 100, 100, 49.04, 25.17, 30.81, 100, 100, 70.29, 43.03, 9.54, 97.38, 100, 91.38, 61.1, 82.81, 98.43, 11.56, 100, 31.53, 85.6, 99.95, 62.93, 89.92, 39.37, 65.56, 51.35, 100, 100, 49.56, 25.68, 30.11, 100, 100, 70.82, 43.56, 8.92, 97.03, 100, 91.82, 61.63, 82.44, 98.28, 11.16, 100, 31.09, 84.82, 99.89, 62.13, 89.15, 39.47, 69.74, 52.21, 100, 100, 48.89, 25.02, 30.97, 100, 100, 70.16, 9.69, 42.9, 97.46, 100, 91.25, 60.96, 83.31, 98.62, 12.07, 100, 32.03, None, 48.39, 51.16, 69.25, 63.18, 90.17, 40.52, 70.79, 50.88, 100, 100, 50.03, 26.15, 29.63, 100, 100, 71.31, 44.04, 8.5, 96.78, 100, 92.23, 62.12, 81.94, 98.09, 10.69, 100, 30.64, 84.27, 99.83, 61.58, 88.61, 38.92, 69.2, 52.31, 86.66, 65.15, None, 4.8, 1.4, 31.07, 52.3, 34.4, 31.19, 100, 100, 69.96, 42.7, 9.9, 97.56, 100, 91.08, 60.77, 83.81, 98.79, 12.56, 100, 32.54, 85.85, 99.97, 63.18, 90.17, 40.53, 70.79, 50.47, 100, 100, 50.43, 26.54, 29.23, 100, 100, 44.42, 71.71, 8.15, 96.57, 100, 92.54, 62.51, 82.48, 98.3, 11.23, 100, 31.17, 83.98, 99.79, 61.29, 88.3, 38.61, 68.89, 51.94, 100, 100, 49.19, 25.31, 30.7, 100, 100, 70.45, 43.19, 9.44, 97.33, 100, 91.51, 61.26, 84.08, 98.88, 12.85, 100, 32.79, 85.39, 99.94, 62.69, 89.7, 40.03, 70.3, 50.2, 100, 100, 50.71, 26.81, 28.96, 100, 100, 71.97, 44.71, 7.94, 96.43, 100, 92.77, 62.79, 82.92, 98.47, 11.66, 100, 31.62, 83.76, 99.76, 61.06, 88.08, 38.39, 68.67, 51.6, 100, 100, 49.55, 25.67, 30.34, 100, 100, 70.83, 9.11, 43.57, 97.14, 100, 91.83, 61.63, 84.2, 98.92, 12.96, 100, 32.94, 85.08, 99.91, 62.38, 89.4, 39.73, 69.99, 50.11, 100, 100, 50.81, 26.94, 28.85, 100, 100, 72.1, 7.84, 44.83, 96.35, 100, 92.87, 62.91, 83.2, 98.57, 11.95, 100, 31.91, 83.64, 99.74, 60.95, 87.96, 38.29, 68.56, 51.29, 100, 100, 49.81, 25.93, 30.05, 100, 100, 71.09, 43.81, 8.87, 97, 100, 92.04, 61.89, 84.27, 98.94, 13.02, 100, 32.97, 84.85, 99.89, 62.17, 89.17, 39.51, 69.79], dtype=object) . | sentinel:valid_cloud_cover()boolTruearray(True) . | constellation()&lt;U10&amp;#x27;sentinel-2&amp;#x27;array(&amp;#x27;sentinel-2&amp;#x27;, dtype=&amp;#x27;&lt;U10&amp;#x27;) . | gsd()int6410array(10) . | updated(time)&lt;U24&amp;#x27;2020-08-19T09:47:27.999Z&amp;#x27; ... &amp;#x27;...array([&amp;#x27;2020-08-19T09:47:27.999Z&amp;#x27;, &amp;#x27;2020-08-19T09:31:51.304Z&amp;#x27;, &amp;#x27;2020-08-19T09:41:57.251Z&amp;#x27;, &amp;#x27;2020-08-19T09:02:29.787Z&amp;#x27;, &amp;#x27;2020-09-19T01:38:29.766Z&amp;#x27;, &amp;#x27;2020-08-20T01:35:00.016Z&amp;#x27;, &amp;#x27;2020-08-19T09:33:44.027Z&amp;#x27;, &amp;#x27;2020-08-19T09:30:52.124Z&amp;#x27;, &amp;#x27;2020-08-19T09:10:43.967Z&amp;#x27;, &amp;#x27;2020-08-19T09:34:57.521Z&amp;#x27;, &amp;#x27;2020-08-31T15:25:11.333Z&amp;#x27;, &amp;#x27;2020-08-19T09:41:55.417Z&amp;#x27;, &amp;#x27;2020-08-19T09:21:58.718Z&amp;#x27;, &amp;#x27;2020-08-19T09:01:18.483Z&amp;#x27;, &amp;#x27;2020-09-24T05:34:20.580Z&amp;#x27;, &amp;#x27;2020-08-19T09:05:50.879Z&amp;#x27;, &amp;#x27;2020-09-18T22:06:47.234Z&amp;#x27;, &amp;#x27;2020-08-19T09:12:42.562Z&amp;#x27;, &amp;#x27;2020-09-19T00:07:01.285Z&amp;#x27;, &amp;#x27;2020-08-19T08:58:15.140Z&amp;#x27;, &amp;#x27;2020-08-31T18:35:41.929Z&amp;#x27;, &amp;#x27;2020-08-19T09:29:44.267Z&amp;#x27;, &amp;#x27;2020-08-19T09:43:50.988Z&amp;#x27;, &amp;#x27;2020-08-19T09:40:57.092Z&amp;#x27;, &amp;#x27;2020-08-19T09:10:11.469Z&amp;#x27;, &amp;#x27;2020-08-23T21:25:07.730Z&amp;#x27;, &amp;#x27;2020-08-19T09:46:19.628Z&amp;#x27;, &amp;#x27;2020-08-19T09:27:12.292Z&amp;#x27;, &amp;#x27;2020-08-19T09:11:59.445Z&amp;#x27;, &amp;#x27;2020-08-19T09:15:29.150Z&amp;#x27;, &amp;#x27;2020-09-05T10:46:55.516Z&amp;#x27;, &amp;#x27;2020-08-19T09:28:20.820Z&amp;#x27;, &amp;#x27;2020-08-19T09:34:55.100Z&amp;#x27;, &amp;#x27;2020-08-19T09:28:17.608Z&amp;#x27;, &amp;#x27;2020-08-19T09:01:06.359Z&amp;#x27;, &amp;#x27;2020-09-05T06:39:07.759Z&amp;#x27;, &amp;#x27;2020-08-19T09:34:28.743Z&amp;#x27;, &amp;#x27;2020-08-19T09:33:05.484Z&amp;#x27;, &amp;#x27;2020-08-19T09:24:02.988Z&amp;#x27;, &amp;#x27;2020-08-19T09:44:06.407Z&amp;#x27;, ... &amp;#x27;2020-08-19T09:01:51.754Z&amp;#x27;, &amp;#x27;2020-09-19T01:33:59.374Z&amp;#x27;, &amp;#x27;2020-08-20T01:41:07.436Z&amp;#x27;, &amp;#x27;2020-08-19T09:35:59.052Z&amp;#x27;, &amp;#x27;2020-08-19T09:23:47.956Z&amp;#x27;, &amp;#x27;2020-08-19T09:37:08.500Z&amp;#x27;, &amp;#x27;2020-08-19T09:27:33.458Z&amp;#x27;, &amp;#x27;2020-08-19T09:24:47.610Z&amp;#x27;, &amp;#x27;2020-08-23T19:50:43.899Z&amp;#x27;, &amp;#x27;2020-08-19T09:13:09.438Z&amp;#x27;, &amp;#x27;2020-09-07T15:25:51.847Z&amp;#x27;, &amp;#x27;2020-08-19T09:02:26.287Z&amp;#x27;, &amp;#x27;2020-09-07T17:17:01.727Z&amp;#x27;, &amp;#x27;2020-08-19T09:55:16.420Z&amp;#x27;, &amp;#x27;2020-08-19T09:33:57.954Z&amp;#x27;, &amp;#x27;2020-08-19T09:21:06.031Z&amp;#x27;, &amp;#x27;2020-08-19T08:58:38.839Z&amp;#x27;, &amp;#x27;2020-08-31T15:53:33.975Z&amp;#x27;, &amp;#x27;2020-08-19T09:31:25.787Z&amp;#x27;, &amp;#x27;2020-08-19T09:50:53.696Z&amp;#x27;, &amp;#x27;2020-08-19T09:22:07.107Z&amp;#x27;, &amp;#x27;2020-08-19T08:53:48.915Z&amp;#x27;, &amp;#x27;2020-09-18T21:56:08.134Z&amp;#x27;, &amp;#x27;2020-08-19T09:36:15.851Z&amp;#x27;, &amp;#x27;2020-08-19T09:32:11.610Z&amp;#x27;, &amp;#x27;2020-08-19T09:35:56.791Z&amp;#x27;, &amp;#x27;2020-08-19T09:01:39.597Z&amp;#x27;, &amp;#x27;2020-09-19T00:07:49.198Z&amp;#x27;, &amp;#x27;2020-08-19T09:49:47.437Z&amp;#x27;, &amp;#x27;2020-08-19T09:33:32.963Z&amp;#x27;, &amp;#x27;2020-08-19T09:32:07.498Z&amp;#x27;, &amp;#x27;2020-08-19T09:37:40.317Z&amp;#x27;, &amp;#x27;2020-08-19T09:15:28.254Z&amp;#x27;, &amp;#x27;2020-08-19T09:16:19.482Z&amp;#x27;, &amp;#x27;2020-09-05T10:23:48.090Z&amp;#x27;, &amp;#x27;2020-08-19T09:06:14.309Z&amp;#x27;, &amp;#x27;2020-09-18T23:49:24.938Z&amp;#x27;, &amp;#x27;2020-08-19T09:09:46.783Z&amp;#x27;, &amp;#x27;2020-09-20T06:02:40.483Z&amp;#x27;], dtype=&amp;#x27;&lt;U24&amp;#x27;) . | sentinel:grid_square(time)&lt;U2&amp;#x27;EC&amp;#x27; &amp;#x27;DC&amp;#x27; &amp;#x27;CC&amp;#x27; ... &amp;#x27;ZG&amp;#x27; &amp;#x27;BA&amp;#x27; &amp;#x27;ZF&amp;#x27;array([&amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;DC&amp;#x27;, &amp;#x27;CC&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;CB&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;CA&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;, &amp;#x27;EC&amp;#x27;, &amp;#x27;EB&amp;#x27;, &amp;#x27;DB&amp;#x27;, &amp;#x27;EA&amp;#x27;, &amp;#x27;DA&amp;#x27;, &amp;#x27;BC&amp;#x27;, &amp;#x27;ZH&amp;#x27;, &amp;#x27;BB&amp;#x27;, &amp;#x27;ZG&amp;#x27;, &amp;#x27;BA&amp;#x27;, &amp;#x27;ZF&amp;#x27;], dtype=&amp;#x27;&lt;U2&amp;#x27;) . | instruments()&lt;U3&amp;#x27;msi&amp;#x27;array(&amp;#x27;msi&amp;#x27;, dtype=&amp;#x27;&lt;U3&amp;#x27;) . | platform(time)&lt;U11&amp;#x27;sentinel-2a&amp;#x27; ... &amp;#x27;sentinel-2b&amp;#x27;array([&amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, ... &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2a&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;, &amp;#x27;sentinel-2b&amp;#x27;], dtype=&amp;#x27;&lt;U11&amp;#x27;) . | proj:epsg(time)int6432649 32649 32649 ... 32649 32648array| sentinel:latitude_band()&lt;U1&amp;#x27;Q&amp;#x27;array(&amp;#x27;Q&amp;#x27;, dtype=&amp;#x27;&lt;U1&amp;#x27;) . | eo:cloud_cover(time)float6460.11 85.52 66.16 ... 3.81 18.55array([6.011e+01, 8.552e+01, 6.616e+01, 2.924e+01, 2.061e+01, 3.775e+01, 5.499e+01, 8.624e+01, 6.520e+01, 7.000e-01, 6.354e+01, 1.993e+01, 6.186e+01, 5.396e+01, 4.744e+01, 1.000e+02, 1.000e+02, 7.149e+01, 7.712e+01, 5.650e+00, 3.166e+01, 9.946e+01, 1.000e+02, 1.000e+02, 1.000e+02, 1.000e+02, 9.554e+01, 9.916e+01, 9.996e+01, 9.963e+01, 1.000e+02, 9.476e+01, 7.347e+01, 9.380e+01, 9.877e+01, 9.829e+01, 7.232e+01, 7.191e+01, 9.706e+01, 7.247e+01, 6.788e+01, 2.297e+01, 3.394e+01, 2.720e+01, 2.249e+01, 3.984e+01, 3.516e+01, 2.784e+01, 6.183e+01, 9.014e+01, 8.725e+01, 8.571e+01, 9.901e+01, 9.847e+01, 9.954e+01, 8.681e+01, 8.410e+01, 9.999e+01, 1.000e+02, 9.565e+01, 8.398e+01, 8.406e+01, 2.030e+01, 7.118e+01, 9.340e+01, 3.082e+01, 7.361e+01, 5.559e+01, 6.554e+01, 3.562e+01, 4.776e+01, 8.838e+01, 8.826e+01, 4.442e+01, 7.602e+01, 8.149e+01, 2.075e+01, 3.180e+00, 9.527e+01, 8.307e+01, 8.121e+01, 2.830e+01, 9.943e+01, 1.311e+01, 9.594e+01, 9.418e+01, 8.971e+01, 8.634e+01, 1.400e+00, 2.470e+00, 0.000e+00, 5.000e-02, 0.000e+00, 1.040e+00, 1.700e-01, 0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, 6.800e-01, 8.100e-01, 9.435e+01, 8.440e+01, 8.679e+01, 9.354e+01, 9.468e+01, 6.313e+01, 5.807e+01, 6.693e+01, 9.551e+01, 9.316e+01, 2.300e+00, 1.150e+01, 3.698e+01, 6.134e+01, 5.473e+01, 9.999e+01, 9.984e+01, 9.999e+01, 9.881e+01, ... 2.800e-01, 6.000e-02, 0.000e+00, 9.000e-02, 6.600e-01, 2.523e+01, 2.823e+01, 1.393e+01, 2.307e+01, 4.820e+00, 3.720e+00, 2.870e+00, 2.505e+01, 4.593e+01, 7.959e+01, 9.183e+01, 6.700e+00, 3.786e+01, 7.190e+01, 8.910e+01, 8.906e+01, 1.687e+01, 3.766e+01, 9.213e+01, 9.888e+01, 9.864e+01, 1.329e+01, 1.579e+01, 3.290e+00, 8.070e+00, 9.800e-01, 3.700e-01, 5.400e-01, 1.050e+00, 6.500e-01, 2.000e-02, 1.000e-02, 1.840e+00, 1.844e+01, 6.414e+01, 9.935e+01, 9.965e+01, 5.810e+00, 2.080e+00, 1.312e+01, 4.636e+01, 2.210e+00, 5.025e+01, 6.850e+00, 1.028e+01, 7.990e+00, 6.300e+00, 0.000e+00, 9.060e+00, 4.363e+01, 3.875e+01, 5.879e+01, 4.956e+01, 5.100e+01, 1.882e+01, 2.437e+01, 8.362e+01, 6.295e+01, 1.000e+02, 1.000e+02, 1.000e+02, 1.000e+02, 1.000e+02, 1.000e+02, 9.997e+01, 9.999e+01, 1.000e+02, 9.999e+01, 1.000e+02, 1.000e+02, 1.000e+02, 9.995e+01, 9.994e+01, 9.696e+01, 9.647e+01, 9.643e+01, 9.627e+01, 8.677e+01, 5.003e+01, 4.471e+01, 9.840e+00, 7.670e+00, 1.900e-01, 7.700e-01, 5.274e+01, 2.922e+01, 2.387e+01, 6.317e+01, 7.576e+01, 8.383e+01, 8.071e+01, 7.519e+01, 4.924e+01, 3.510e+01, 9.724e+01, 9.185e+01, 5.506e+01, 2.541e+01, 2.009e+01, 6.807e+01, 3.855e+01, 1.433e+01, 2.747e+01, 7.588e+01, 1.619e+01, 2.801e+01, 1.515e+01, 3.214e+01, 3.810e+00, 1.855e+01]) . | sentinel:product_id(time)&lt;U60&amp;#x27;S2A_MSIL2A_20200402T030541_N021...array([&amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QEC_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QDC_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QCC_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QBC_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T48QZH_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QEB_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QDB_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QCB_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QBB_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QEA_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T48QZG_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QDA_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QCA_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T49QBA_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200402T030541_N0214_R075_T48QZF_20200402T071721&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200405T031541_N0214_R118_T49QBC_20200405T074259&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200405T031541_N0214_R118_T48QZH_20200405T074259&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200405T031541_N0214_R118_T49QBB_20200405T074259&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200405T031541_N0214_R118_T48QZG_20200405T074259&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200405T031541_N0214_R118_T49QBA_20200405T074259&amp;#x27;, ... &amp;#x27;S2B_MSIL2A_20200527T030549_N0214_R075_T49QCB_20200527T071730&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200527T030549_N0214_R075_T49QBB_20200527T071730&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200527T030549_N0214_R075_T48QZG_20200527T071730&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200527T030549_N0214_R075_T49QEA_20200527T071730&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200527T030549_N0214_R075_T49QDA_20200527T071730&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200527T030549_N0214_R075_T49QCA_20200527T071730&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200527T030549_N0214_R075_T49QBA_20200527T071730&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200527T030549_N0214_R075_T48QZF_20200527T071730&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200529T025551_N0214_R032_T49QEC_20200529T070412&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200529T025551_N0214_R032_T49QEB_20200529T070412&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200529T025551_N0214_R032_T49QDB_20200529T070412&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200529T025551_N0214_R032_T49QEA_20200529T070412&amp;#x27;, &amp;#x27;S2A_MSIL2A_20200529T025551_N0214_R032_T49QDA_20200529T070412&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200530T031539_N0214_R118_T49QBC_20200530T072929&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200530T031539_N0214_R118_T48QZH_20200530T072929&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200530T031539_N0214_R118_T49QBB_20200530T072929&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200530T031539_N0214_R118_T48QZG_20200530T072929&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200530T031539_N0214_R118_T49QBA_20200530T072929&amp;#x27;, &amp;#x27;S2B_MSIL2A_20200530T031539_N0214_R118_T48QZF_20200530T072929&amp;#x27;], dtype=&amp;#x27;&lt;U60&amp;#x27;) . | sentinel:utm_zone(time)int6449 49 49 49 48 ... 48 49 48 49 48array([49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 48, 49, 49, 49, 48, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 48, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 48, 49, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 48, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 48, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 48, 49, 49, 49, 49, 49, 49, 48, 49, 48, 49, 48]) . | view:off_nadir()int640array(0) . | data_coverage(time)objectNone None None ... 89.17 None 69.79array([None, None, None, None, 25.42, None, None, None, None, None, 43.29, None, None, None, 61.35, None, 99.94, None, 89.74, None, 70.33, None, None, None, None, None, None, None, None, None, 43.03, None, None, None, None, 61.1, None, None, None, None, None, None, 99.95, None, 89.92, None, 65.56, None, None, None, None, 25.68, None, None, None, None, 43.56, None, None, None, None, 61.63, None, None, None, None, None, None, 99.89, None, 89.15, None, 69.74, None, None, None, None, 25.02, None, None, None, None, None, 42.9, None, None, None, 60.96, None, None, None, None, None, None, 48.39, None, 69.25, None, 90.17, None, 70.79, None, None, None, None, 26.15, None, None, None, None, 44.04, None, None, None, None, 62.12, None, None, None, None, None, None, 99.83, None, 88.61, None, 69.2, None, None, None, None, None, None, None, None, None, None, None, None, None, 42.7, None, None, None, None, None, None, None, None, None, None, None, 99.97, None, 90.17, None, 70.79, None, None, None, None, 26.54, None, None, None, 44.42, None, None, None, None, None, 62.51, None, None, None, None, None, None, None, None, 88.3, None, 68.89, None, None, None, None, 25.31, None, None, None, None, 43.19, None, None, None, None, 61.26, None, None, None, None, None, None, 99.94, None, 89.7, None, 70.3, None, None, None, None, 26.81, None, None, None, None, 44.71, None, None, None, None, 62.79, None, None, None, None, None, None, 99.76, None, 88.08, None, 68.67, None, None, None, None, 25.67, None, None, None, None, None, 43.57, None, None, None, 61.63, None, None, None, None, None, None, 99.91, None, 89.4, None, 69.99, None, None, None, None, 26.94, None, None, None, None, None, 44.83, None, None, None, 62.91, None, None, None, None, None, None, None, None, 87.96, None, 68.56, None, None, None, None, 25.93, None, None, None, None, 43.81, None, None, None, None, 61.89, None, None, None, None, None, None, 99.89, None, 89.17, None, 69.79], dtype=object) . | title(band)&lt;U31&amp;#x27;True color image&amp;#x27; ... &amp;#x27;Scene Cl...array([&amp;#x27;True color image&amp;#x27;, &amp;#x27;True color image&amp;#x27;, &amp;#x27;Band 1 (coastal)&amp;#x27;, &amp;#x27;Band 2 (blue)&amp;#x27;, &amp;#x27;Band 3 (green)&amp;#x27;, &amp;#x27;Band 4 (red)&amp;#x27;, &amp;#x27;Band 5&amp;#x27;, &amp;#x27;Band 6&amp;#x27;, &amp;#x27;Band 7&amp;#x27;, &amp;#x27;Band 8 (nir)&amp;#x27;, &amp;#x27;Band 8A&amp;#x27;, &amp;#x27;Band 9&amp;#x27;, &amp;#x27;Band 11 (swir16)&amp;#x27;, &amp;#x27;Band 12 (swir22)&amp;#x27;, &amp;#x27;Aerosol Optical Thickness (AOT)&amp;#x27;, &amp;#x27;Water Vapour (WVP)&amp;#x27;, &amp;#x27;Scene Classification Map (SCL)&amp;#x27;], dtype=&amp;#x27;&lt;U31&amp;#x27;) . | epsg()int643857array(3857) . | . | Attributes: (4)spec :RasterSpec(epsg=3857, bounds=(12003838.074850246, 2033038.4942791834, 12473887.502329968, 2368079.782281639), resolutions_xy=(10.57621788047254, 10.639946902170777))crs :epsg:3857transform :| 10.58, 0.00, 12003838.07| | 0.00,-10.64, 2368079.78| | 0.00, 0.00, 1.00|resolution_xy :(10.57621788047254, 10.639946902170777) | . rgb = stack.sel(band=[&quot;B02&quot;]) . monthly = rgb.resample(time=&quot;MS&quot;).median(&quot;time&quot;, keep_attrs=True) . import dask.diagnostics with dask.diagnostics.ProgressBar(): data = monthly.compute() .",
            "url": "https://robeson1010.github.io/TensorX_Blog/jupyter/remote%20sensing/cloud%20computing/deep%20learning/2021/12/06/Stac.html",
            "relUrl": "/jupyter/remote%20sensing/cloud%20computing/deep%20learning/2021/12/06/Stac.html",
            "date": " • Dec 6, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "GEE+S3 Part1",
            "content": "import os import numpy as np import matplotlib.pyplot as plt import boto3 import rasterio from rasterio.windows import Window from rasterio.session import AWSSession import ee . ee.Authenticate() # Initialize the library. ee.Initialize() . To authorize access needed by Earth Engine, open the following URL in a web browser and follow the instructions: . &lt;a href=https://accounts.google.com/o/oauth2/auth?client_id=517222506229-vsmmajv00ul0bs7p89v5m89qs8eb9359.apps.googleusercontent.com&amp;scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fearthengine+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdevstorage.full_control&amp;redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&amp;response_type=code&amp;code_challenge=lrziDUwZJkUFnhQWUqFSblr0olJXiJfJJ-j7GBfpyAQ&amp;code_challenge_method=S256&gt;https://accounts.google.com/o/oauth2/auth?client_id=517222506229-vsmmajv00ul0bs7p89v5m89qs8eb9359.apps.googleusercontent.com&amp;scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fearthengine+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdevstorage.full_control&amp;redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&amp;response_type=code&amp;code_challenge=lrziDUwZJkUFnhQWUqFSblr0olJXiJfJJ-j7GBfpyAQ&amp;code_challenge_method=S256&lt;/a&gt; . The authorization workflow will generate a code, which you should paste in the box below . Successfully saved authorization token. . table = ee.FeatureCollection(&quot;users/robeson1010/zhongguo&quot;) table=table.filterMetadata(&#39;id&#39;,&#39;equals&#39;,&#39;Hainan&#39;) table=table.toList(1).get(0) sar=ee.ImageCollection(&#39;COPERNICUS/S1_GRD&#39;).filter(ee.Filter.eq(&#39;transmitterReceiverPolarisation&#39;, [&quot;VV&quot;,&quot;VH&quot;])).filterDate(&#39;2017-01-01&#39;,&#39;2017-12-31&#39;).filterBounds(ee.Feature(table).geometry()).filterMetadata(&#39;orbitProperties_pass&#39;,&#39;equals&#39;,&#39;ASCENDING&#39;).filterMetadata(&#39;relativeOrbitNumber_start&#39;,&#39;equals&#39;,157).sort(&#39;system:time_start&#39;, True); . Get datalist from GEE . ll=sar.aggregate_array(&#39;system:index&#39;).getInfo() ll . [&#39;S1A_IW_GRDH_1SDV_20170109T104832_20170109T104901_014754_018052_647B&#39;, &#39;S1A_IW_GRDH_1SDV_20170109T104901_20170109T104926_014754_018052_C602&#39;, &#39;S1A_IW_GRDH_1SDV_20170121T104831_20170121T104900_014929_0185D0_A6F6&#39;, &#39;S1A_IW_GRDH_1SDV_20170121T104900_20170121T104925_014929_0185D0_BEBC&#39;, &#39;S1A_IW_GRDH_1SDV_20170202T104831_20170202T104900_015104_018B17_2A64&#39;, &#39;S1A_IW_GRDH_1SDV_20170202T104900_20170202T104925_015104_018B17_33D9&#39;, &#39;S1A_IW_GRDH_1SDV_20170214T104831_20170214T104900_015279_0190A0_2E30&#39;, &#39;S1A_IW_GRDH_1SDV_20170214T104900_20170214T104925_015279_0190A0_023E&#39;, &#39;S1A_IW_GRDH_1SDV_20170226T104831_20170226T104900_015454_0195F7_1353&#39;, &#39;S1A_IW_GRDH_1SDV_20170226T104900_20170226T104925_015454_0195F7_95F6&#39;, &#39;S1A_IW_GRDH_1SDV_20170310T104831_20170310T104900_015629_019B43_B07B&#39;, &#39;S1A_IW_GRDH_1SDV_20170310T104900_20170310T104925_015629_019B43_0F16&#39;, &#39;S1A_IW_GRDH_1SDV_20170322T104847_20170322T104916_015804_01A07A_771E&#39;, &#39;S1A_IW_GRDH_1SDV_20170322T104916_20170322T104941_015804_01A07A_5146&#39;, &#39;S1A_IW_GRDH_1SDV_20170403T104848_20170403T104917_015979_01A5AB_26E1&#39;, &#39;S1A_IW_GRDH_1SDV_20170403T104917_20170403T104942_015979_01A5AB_8FDD&#39;, &#39;S1A_IW_GRDH_1SDV_20170415T104848_20170415T104917_016154_01AB03_C3C0&#39;, &#39;S1A_IW_GRDH_1SDV_20170415T104917_20170415T104942_016154_01AB03_65E3&#39;, &#39;S1A_IW_GRDH_1SDV_20170427T104849_20170427T104918_016329_01B053_6FF1&#39;, &#39;S1A_IW_GRDH_1SDV_20170427T104918_20170427T104943_016329_01B053_ACC3&#39;, &#39;S1A_IW_GRDH_1SDV_20170509T104850_20170509T104919_016504_01B5AC_67F0&#39;, &#39;S1A_IW_GRDH_1SDV_20170509T104919_20170509T104944_016504_01B5AC_7197&#39;, &#39;S1A_IW_GRDH_1SDV_20170521T104850_20170521T104919_016679_01BB04_5410&#39;, &#39;S1A_IW_GRDH_1SDV_20170521T104919_20170521T104944_016679_01BB04_32EE&#39;, &#39;S1A_IW_GRDH_1SDV_20170602T104851_20170602T104920_016854_01C069_E081&#39;, &#39;S1A_IW_GRDH_1SDV_20170602T104920_20170602T104945_016854_01C069_0A65&#39;, &#39;S1A_IW_GRDH_1SDV_20170614T104852_20170614T104921_017029_01C5D4_379D&#39;, &#39;S1A_IW_GRDH_1SDV_20170614T104921_20170614T104946_017029_01C5D4_B17F&#39;, &#39;S1A_IW_GRDH_1SDV_20170626T104852_20170626T104921_017204_01CB29_4691&#39;, &#39;S1A_IW_GRDH_1SDV_20170626T104921_20170626T104946_017204_01CB29_EF7C&#39;, &#39;S1A_IW_GRDH_1SDV_20170708T104853_20170708T104922_017379_01D06B_0171&#39;, &#39;S1A_IW_GRDH_1SDV_20170708T104922_20170708T104947_017379_01D06B_4C47&#39;, &#39;S1A_IW_GRDH_1SDV_20170720T104854_20170720T104923_017554_01D5C0_3296&#39;, &#39;S1A_IW_GRDH_1SDV_20170720T104923_20170720T104948_017554_01D5C0_BFE3&#39;, &#39;S1A_IW_GRDH_1SDV_20170801T104854_20170801T104923_017729_01DB20_7838&#39;, &#39;S1A_IW_GRDH_1SDV_20170801T104923_20170801T104948_017729_01DB20_A127&#39;, &#39;S1A_IW_GRDH_1SDV_20170813T104855_20170813T104924_017904_01E06A_1538&#39;, &#39;S1A_IW_GRDH_1SDV_20170813T104924_20170813T104949_017904_01E06A_4DD4&#39;, &#39;S1A_IW_GRDH_1SDV_20170825T104856_20170825T104925_018079_01E5BA_2D64&#39;, &#39;S1A_IW_GRDH_1SDV_20170825T104925_20170825T104950_018079_01E5BA_E406&#39;, &#39;S1A_IW_GRDH_1SDV_20170906T104856_20170906T104925_018254_01EB0D_9C01&#39;, &#39;S1A_IW_GRDH_1SDV_20170906T104925_20170906T104950_018254_01EB0D_77F3&#39;, &#39;S1A_IW_GRDH_1SDV_20170918T104857_20170918T104926_018429_01F07A_683A&#39;, &#39;S1A_IW_GRDH_1SDV_20170918T104926_20170918T104951_018429_01F07A_5FE4&#39;, &#39;S1A_IW_GRDH_1SDV_20170930T104857_20170930T104926_018604_01F5D8_660E&#39;, &#39;S1A_IW_GRDH_1SDV_20170930T104926_20170930T104951_018604_01F5D8_5C88&#39;, &#39;S1A_IW_GRDH_1SDV_20171012T104857_20171012T104926_018779_01FB27_6CE5&#39;, &#39;S1A_IW_GRDH_1SDV_20171012T104926_20171012T104951_018779_01FB27_86C4&#39;, &#39;S1A_IW_GRDH_1SDV_20171024T104857_20171024T104926_018954_020083_9BD4&#39;, &#39;S1A_IW_GRDH_1SDV_20171024T104926_20171024T104951_018954_020083_C17B&#39;, &#39;S1A_IW_GRDH_1SDV_20171105T104857_20171105T104926_019129_0205E1_F330&#39;, &#39;S1A_IW_GRDH_1SDV_20171105T104926_20171105T104951_019129_0205E1_821B&#39;, &#39;S1A_IW_GRDH_1SDV_20171117T104857_20171117T104926_019304_020B54_DBED&#39;, &#39;S1A_IW_GRDH_1SDV_20171117T104926_20171117T104951_019304_020B54_D976&#39;, &#39;S1A_IW_GRDH_1SDV_20171129T104856_20171129T104925_019479_0210D9_FDB3&#39;, &#39;S1A_IW_GRDH_1SDV_20171129T104925_20171129T104950_019479_0210D9_905F&#39;, &#39;S1A_IW_GRDH_1SDV_20171211T104856_20171211T104925_019654_021653_581E&#39;, &#39;S1A_IW_GRDH_1SDV_20171211T104925_20171211T104950_019654_021653_D88F&#39;, &#39;S1A_IW_GRDH_1SDV_20171223T104855_20171223T104924_019829_021BB6_33C7&#39;, &#39;S1A_IW_GRDH_1SDV_20171223T104924_20171223T104949_019829_021BB6_B07D&#39;] . Read data from S3 by Cloud based TIFF . aws_session = AWSSession(aws_access_key_id=access_key,aws_secret_access_key=secret_access_key,region_name=region_name,requester_pays=True) for l in ll: infos=l.split(&#39;_&#39;) s3url=&#39;s3://sentinel-s1-l1c/GRD/&#39;+infos[4][:4]+&#39;/&#39;+str(int(infos[4][4:6]))+&#39;/&#39;+str(int(infos[4][6:8]))+&#39;/&#39;+infos[1]+&#39;/&#39;+infos[3][2:]+&#39;/&#39;+l+&#39;/measurement/iw-vh.tiff&#39; with rasterio.Env(aws_session): with rasterio.open(s3url) as src: profile = src.profile temp=src.read(window=Window(5000,5000,512,512)) break . plt.imshow(temp[0]) . &lt;matplotlib.image.AxesImage at 0x7f81ac202340&gt; .",
            "url": "https://robeson1010.github.io/TensorX_Blog/jupyter/remote%20sensing/cloud%20computing/deep%20learning/2021/12/01/PlanetaryCom.html",
            "relUrl": "/jupyter/remote%20sensing/cloud%20computing/deep%20learning/2021/12/01/PlanetaryCom.html",
            "date": " • Dec 1, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://robeson1010.github.io/TensorX_Blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://robeson1010.github.io/TensorX_Blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Tensor-X .",
          "url": "https://robeson1010.github.io/TensorX_Blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://robeson1010.github.io/TensorX_Blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}